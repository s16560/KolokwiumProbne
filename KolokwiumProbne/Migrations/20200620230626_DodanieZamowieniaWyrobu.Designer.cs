// <auto-generated />
using System;
using KolokwiumProbne.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KolokwiumProbne.Migrations
{
    [DbContext(typeof(CukierniaDbContext))]
    [Migration("20200620230626_DodanieZamowieniaWyrobu")]
    partial class DodanieZamowieniaWyrobu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KolokwiumProbne.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlient");

                    b.ToTable("Klienci");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Jan",
                            Nazwisko = "Kowalski"
                        },
                        new
                        {
                            IdKlient = 2,
                            Imie = "Marian",
                            Nazwisko = "Jankowski"
                        },
                        new
                        {
                            IdKlient = 3,
                            Imie = "Stefan",
                            Nazwisko = "Janiak"
                        },
                        new
                        {
                            IdKlient = 4,
                            Imie = "Anna",
                            Nazwisko = "Malewska"
                        },
                        new
                        {
                            IdKlient = 5,
                            Imie = "Barbara",
                            Nazwisko = "Szyszko"
                        });
                });

            modelBuilder.Entity("KolokwiumProbne.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracownicy");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            Imie = "Kazimierz",
                            Nazwisko = "Janiak"
                        },
                        new
                        {
                            IdPracownik = 2,
                            Imie = "Jan",
                            Nazwisko = "Kania"
                        },
                        new
                        {
                            IdPracownik = 3,
                            Imie = "Juliusz",
                            Nazwisko = "Michalak"
                        },
                        new
                        {
                            IdPracownik = 4,
                            Imie = "Kazimiera",
                            Nazwisko = "Witkowska"
                        });
                });

            modelBuilder.Entity("KolokwiumProbne.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego");

                    b.ToTable("WyrobyCukiernicze");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            CenaZaSzt = 5f,
                            Nazwa = "Eklerka",
                            Typ = "Ciastko"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            CenaZaSzt = 3f,
                            Nazwa = "Donut",
                            Typ = "Ciastko"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            CenaZaSzt = 4f,
                            Nazwa = "Batonik kokosowy",
                            Typ = "Baton"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 4,
                            CenaZaSzt = 7f,
                            Nazwa = "Lizak serce",
                            Typ = "Lizak"
                        });
                });

            modelBuilder.Entity("KolokwiumProbne.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdKlient");

                    b.ToTable("Zamowienia");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjecia = new DateTime(2020, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdKlient = 1,
                            IdPracownik = 2,
                            Uwagi = "brak"
                        },
                        new
                        {
                            IdZamowienia = 2,
                            DataPrzyjecia = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdKlient = 3,
                            IdPracownik = 2,
                            Uwagi = "na dziś!"
                        },
                        new
                        {
                            IdZamowienia = 3,
                            DataPrzyjecia = new DateTime(2020, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdKlient = 2,
                            IdPracownik = 1,
                            Uwagi = "nerwowy klient!"
                        },
                        new
                        {
                            IdZamowienia = 4,
                            DataPrzyjecia = new DateTime(2020, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRealizacji = new DateTime(2020, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdKlient = 1,
                            IdPracownik = 4,
                            Uwagi = "brak"
                        });
                });

            modelBuilder.Entity("KolokwiumProbne.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdWyrobuCukierniczego", "IdZamowienia");

                    b.HasIndex("IdZamowienia");

                    b.ToTable("Zamowienie_WyrobyCukiernicze");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            IdZamowienia = 3,
                            Ilosc = 2,
                            Uwagi = "uwaga1"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 4,
                            IdZamowienia = 2,
                            Ilosc = 2,
                            Uwagi = "uwaga2"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            IdZamowienia = 1,
                            Ilosc = 2,
                            Uwagi = "uwaga3"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            IdZamowienia = 4,
                            Ilosc = 2,
                            Uwagi = "uwaga4"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            IdZamowienia = 4,
                            Ilosc = 3,
                            Uwagi = "uwaga4"
                        });
                });

            modelBuilder.Entity("KolokwiumProbne.Models.Zamowienie", b =>
                {
                    b.HasOne("KolokwiumProbne.Models.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolokwiumProbne.Models.Pracownik", "Pracownik")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KolokwiumProbne.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.HasOne("KolokwiumProbne.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany("Zamowienie_WyrobyCukiernicze")
                        .HasForeignKey("IdWyrobuCukierniczego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KolokwiumProbne.Models.Zamowienie", "Zamowienie")
                        .WithMany("Zamowienie_WyrobyCukiernicze")
                        .HasForeignKey("IdZamowienia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
